#############################################################################
##  v      #                   The Coq Proof Assistant                     ##
## <O___,, #                INRIA - CNRS - LIX - LRI - PPS                 ##
##   \VV/  #                                                               ##
##    //   #  Makefile automagically generated by coq_makefile V8.5pl2     ##
#############################################################################

# WARNING
#
# This Makefile has been automagically generated
# Edit at your own risks !
#
# END OF WARNING

#
# This Makefile was generated by the command line :
# coq_makefile -R theories Lvc -R ContainersPlugin/theories Containers -R paco Paco -I ContainersPlugin/src -I src src/lvc_plugin.ml4 theories/Infra/PartialOrder.v theories/Infra/AllInRel.v theories/Infra/Option.v theories/Infra/OptionR.v theories/Infra/LengthEq.v theories/Infra/Take.v theories/Infra/EqDec.v theories/Infra/Drop.v theories/Infra/Position.v theories/Infra/Computable.v theories/Infra/SigR.v theories/Infra/DecSolve.v theories/Infra/ListUpdateAt.v theories/Infra/OUnion.v theories/Infra/Indexwise.v theories/Infra/Status.v theories/Infra/Util.v theories/Infra/Get.v theories/Infra/Sublist.v theories/Infra/Terminating.v theories/Infra/MoreList.v theories/Infra/SizeInduction.v theories/Infra/Keep.v theories/Infra/AutoIndTac.v theories/Infra/OptionMap.v theories/LivenessAnalysisCorrect.v theories/LivenessValidators.v theories/Filter.v theories/IL/ILDB.v theories/IL/Annotation.v theories/IL/LabelsDefined.v theories/IL/IL.v theories/IL/ILN_IL.v theories/IL/SmallStepRelations.v theories/IL/Var.v theories/IL/StateType.v theories/IL/Events.v theories/IL/Subterm.v theories/IL/Patterns.v theories/IL/Env.v theories/IL/Rename.v theories/IL/ILN.v theories/IL/BlockType.v theories/InRel4.v theories/Eqn.v theories/LivenessAnalysis.v theories/Compiler.v theories/Lattice.v theories/TransVal/ILFtoSMT.v theories/TransVal/SMT.v theories/TransVal/CombineEnv.v theories/TransVal/NoFun.v theories/TransVal/TransValSound.v theories/TransVal/GuardProps.v theories/TransVal/Guards.v theories/TransVal/ComputeProps.v theories/Equiv/CtxEq.v theories/Equiv/Bisim.v theories/Equiv/TraceEquiv.v theories/Equiv/SimI.v theories/Equiv/SimF.v theories/Equiv/BisimSim.v theories/Equiv/Sim.v theories/Equiv/SimTactics.v theories/ConstantPropagation.v theories/UnreachableCode.v theories/Alpha.v theories/Spilling/Soundness.v theories/Spilling/StupSpill.v theories/Spilling/SimplSpill.v theories/Spilling/Spilling.v theories/Constr/CSetGet.v theories/Constr/SetOperations.v theories/Constr/CSetDisjoint.v theories/Constr/MapDefined.v theories/Constr/MapAgreeSet.v theories/Constr/Map.v theories/Constr/CSetBasic.v theories/Constr/CSetTac.v theories/Constr/CSetPartialOrder.v theories/Constr/CSetComputable.v theories/Constr/MapComposition.v theories/Constr/MapAgreement.v theories/Constr/CSetNotation.v theories/Constr/MapLookup.v theories/Constr/MapBasics.v theories/Constr/CSetCases.v theories/Constr/PairwiseDisjoint.v theories/Constr/MapUpdate.v theories/Constr/MapLookupList.v theories/Constr/MapInjectivity.v theories/Constr/CSet.v theories/Constr/CMap.v theories/Constr/MapInverse.v theories/Liveness.v theories/Isa/Val.v theories/Isa/MoreExp.v theories/Isa/Exp.v theories/Isa/BitVector.v theories/Isa/OrderedBitVector.v theories/UnreachableCodeAnalysis.v theories/GVN.v theories/AnalysisBackward.v theories/CompCert/Integers.v theories/CompCert/Coqlib.v theories/DVE.v theories/CopyPropagation.v theories/Analysis.v theories/ShadowingFree.v theories/RenamedApart.v theories/Coherence/AllocationAlgo.v theories/Coherence/AllocationAlgoBound.v theories/Coherence/Allocation.v theories/Coherence/Coherence.v theories/Coherence/DelocationCorrect.v theories/Coherence/Delocation.v theories/Coherence/AllocationValidator.v theories/Coherence/Invariance.v theories/Coherence/DelocationValidator.v theories/Coherence/DelocationAlgo.v theories/Coherence/Restrict.v theories/Coherence/AllocationAlgoCorrect.v theories/ConstantPropagationAnalysis.v theories/ParallelMove.v theories/EAE.v theories/Sawtooth.v theories/UnreachableCodeAnalysisCorrect.v theories/AnalysisForward.v theories/Fresh.v theories/InRel.v theories/LivenessCorrect.v theories/Renest.v theories/DCE.v theories/FiniteFixpointIteration.v theories/RenameApart.v theories/ValueOpts.v theories/TrueLiveness.v theories/RenamedApart_Liveness.v theories/Alpha_RenamedApart.v 
#

.DEFAULT_GOAL := all

# This Makefile may take arguments passed as environment variables:
# COQBIN to specify the directory where Coq binaries resides;
# TIMECMD set a command to log .v compilation time;
# TIMED if non empty, use the default time command as TIMECMD;
# ZDEBUG/COQDEBUG to specify debug flags for ocamlc&ocamlopt/coqc;
# DSTROOT to specify a prefix to install path.

# Here is a hack to make $(eval $(shell works:
define donewline


endef
includecmdwithout@ = $(eval $(subst @,$(donewline),$(shell { $(1) | tr -d '\r' | tr '\n' '@'; })))
$(call includecmdwithout@,$(COQBIN)coqtop -config)

TIMED=
TIMECMD=@./time.rb $(if $(findstring j,$(MAKEFLAGS)),--parallel,)
STDTIME?=/usr/bin/time -f "$* (user: %U mem: %M ko)"
TIMER=$(if $(TIMED), $(STDTIME), $(TIMECMD))

vo_to_obj = $(addsuffix .o,\
  $(filter-out Warning: Error:,\
  $(shell $(COQBIN)coqtop -q -noinit -batch -quiet -print-mod-uid $(1))))

##########################
#                        #
# Libraries definitions. #
#                        #
##########################

OCAMLLIBS?=-I "ContainersPlugin/src"\
  -I "src"
COQLIBS?=\
  -R "theories" Lvc\
  -R "ContainersPlugin/theories" Containers\
  -R "paco" Paco\
  -I "ContainersPlugin/src"\
  -I "src"
COQCHKLIBS?=\
  -R "theories" Lvc\
  -R "ContainersPlugin/theories" Containers\
  -R "paco" Paco
COQDOCLIBS?=\
  -R "theories" Lvc\
  -R "ContainersPlugin/theories" Containers\
  -R "paco" Paco

##########################
#                        #
# Variables definitions. #
#                        #
##########################


OPT?=
COQDEP?="$(COQBIN)coqdep" -c
COQFLAGS?=-q $(OPT) $(COQLIBS) $(OTHERFLAGS) $(COQ_XML)
COQCHKFLAGS?=-silent -o
COQDOCFLAGS?=--interpolate --utf8 --external "http://www.lix.polytechnique.fr/coq/pylons/contribs/files/Containers/v8.4/" Containers --toc --toc-depth 3 --index indexpage --no-lib-name
COQC?=$(TIMER) "$(COQBIN)coqc"
GALLINA?="$(COQBIN)gallina"
COQDOC?="$(COQBIN)coqdoc"
COQCHK?="$(COQBIN)coqchk"
COQMKTOP?="$(COQBIN)coqmktop"

COQSRCLIBS?=-I "$(COQLIB)kernel" \
-I "$(COQLIB)lib" \
-I "$(COQLIB)library" \
-I "$(COQLIB)parsing" \
-I "$(COQLIB)pretyping" \
-I "$(COQLIB)interp" \
-I "$(COQLIB)printing" \
-I "$(COQLIB)intf" \
-I "$(COQLIB)proofs" \
-I "$(COQLIB)tactics" \
-I "$(COQLIB)tools" \
-I "$(COQLIB)toplevel" \
-I "$(COQLIB)stm" \
-I "$(COQLIB)grammar" \
-I "$(COQLIB)config" \
 \
  -I "$(COQLIB)/plugins/btauto" \
  -I "$(COQLIB)/plugins/cc" \
  -I "$(COQLIB)/plugins/decl_mode" \
  -I "$(COQLIB)/plugins/derive" \
  -I "$(COQLIB)/plugins/extraction" \
  -I "$(COQLIB)/plugins/firstorder" \
  -I "$(COQLIB)/plugins/fourier" \
  -I "$(COQLIB)/plugins/funind" \
  -I "$(COQLIB)/plugins/micromega" \
  -I "$(COQLIB)/plugins/nsatz" \
  -I "$(COQLIB)/plugins/omega" \
  -I "$(COQLIB)/plugins/quote" \
  -I "$(COQLIB)/plugins/romega" \
  -I "$(COQLIB)/plugins/rtauto" \
  -I "$(COQLIB)/plugins/setoid_ring" \
  -I "$(COQLIB)/plugins/syntax" \
  -I "$(COQLIB)/plugins/xml"
ZFLAGS=$(OCAMLLIBS) $(COQSRCLIBS) -I $(CAMLP4LIB)

CAMLC?=$(OCAMLC) -c -rectypes -thread
CAMLOPTC?=$(OCAMLOPT) -c -rectypes -thread
CAMLLINK?=$(OCAMLC) -rectypes -thread
CAMLOPTLINK?=$(OCAMLOPT) -rectypes -thread
GRAMMARS?=grammar.cma
ifeq ($(CAMLP4),camlp5)
CAMLP4EXTEND=pa_extend.cmo q_MLast.cmo pa_macro.cmo unix.cma threads.cma
else
CAMLP4EXTEND=threads.cma
endif
PP?=-pp '$(CAMLP4O) -I $(CAMLLIB) -I $(CAMLLIB)threads/ $(COQSRCLIBS) compat5.cmo \
  $(CAMLP4EXTEND) $(GRAMMARS) $(CAMLP4OPTIONS) -impl'

##################
#                #
# Install Paths. #
#                #
##################

ifdef USERINSTALL
XDG_DATA_HOME?="$(HOME)/.local/share"
COQLIBINSTALL=$(XDG_DATA_HOME)/coq
COQDOCINSTALL=$(XDG_DATA_HOME)/doc/coq
else
COQLIBINSTALL="${COQLIB}user-contrib"
COQDOCINSTALL="${DOCDIR}user-contrib"
COQTOPINSTALL="${COQLIB}toploop"
endif

######################
#                    #
# Files dispatching. #
#                    #
######################

VFILES:=theories/Infra/PartialOrder.v\
  theories/Infra/AllInRel.v\
  theories/Infra/Option.v\
  theories/Infra/OptionR.v\
  theories/Infra/LengthEq.v\
  theories/Infra/Take.v\
  theories/Infra/EqDec.v\
  theories/Infra/Drop.v\
  theories/Infra/Position.v\
  theories/Infra/Computable.v\
  theories/Infra/SigR.v\
  theories/Infra/DecSolve.v\
  theories/Infra/ListUpdateAt.v\
  theories/Infra/OUnion.v\
  theories/Infra/Indexwise.v\
  theories/Infra/Status.v\
  theories/Infra/Util.v\
  theories/Infra/Get.v\
  theories/Infra/Sublist.v\
  theories/Infra/Terminating.v\
  theories/Infra/MoreList.v\
  theories/Infra/SizeInduction.v\
  theories/Infra/Keep.v\
  theories/Infra/AutoIndTac.v\
  theories/Infra/OptionMap.v\
  theories/LivenessAnalysisCorrect.v\
  theories/LivenessValidators.v\
  theories/Filter.v\
  theories/IL/ILDB.v\
  theories/IL/Annotation.v\
  theories/IL/LabelsDefined.v\
  theories/IL/IL.v\
  theories/IL/ILN_IL.v\
  theories/IL/SmallStepRelations.v\
  theories/IL/Var.v\
  theories/IL/StateType.v\
  theories/IL/Events.v\
  theories/IL/Subterm.v\
  theories/IL/Patterns.v\
  theories/IL/Env.v\
  theories/IL/Rename.v\
  theories/IL/ILN.v\
  theories/IL/BlockType.v\
  theories/InRel4.v\
  theories/Eqn.v\
  theories/LivenessAnalysis.v\
  theories/Compiler.v\
  theories/Lattice.v\
  theories/TransVal/ILFtoSMT.v\
  theories/TransVal/SMT.v\
  theories/TransVal/CombineEnv.v\
  theories/TransVal/NoFun.v\
  theories/TransVal/TransValSound.v\
  theories/TransVal/GuardProps.v\
  theories/TransVal/Guards.v\
  theories/TransVal/ComputeProps.v\
  theories/Equiv/CtxEq.v\
  theories/Equiv/Bisim.v\
  theories/Equiv/TraceEquiv.v\
  theories/Equiv/SimI.v\
  theories/Equiv/SimF.v\
  theories/Equiv/BisimSim.v\
  theories/Equiv/Sim.v\
  theories/Equiv/SimTactics.v\
  theories/ConstantPropagation.v\
  theories/UnreachableCode.v\
  theories/Alpha.v\
  theories/Spilling/Soundness.v\
  theories/Spilling/StupSpill.v\
  theories/Spilling/SimplSpill.v\
  theories/Spilling/Spilling.v\
  theories/Constr/CSetGet.v\
  theories/Constr/SetOperations.v\
  theories/Constr/CSetDisjoint.v\
  theories/Constr/MapDefined.v\
  theories/Constr/MapAgreeSet.v\
  theories/Constr/Map.v\
  theories/Constr/CSetBasic.v\
  theories/Constr/CSetTac.v\
  theories/Constr/CSetPartialOrder.v\
  theories/Constr/CSetComputable.v\
  theories/Constr/MapComposition.v\
  theories/Constr/MapAgreement.v\
  theories/Constr/CSetNotation.v\
  theories/Constr/MapLookup.v\
  theories/Constr/MapBasics.v\
  theories/Constr/CSetCases.v\
  theories/Constr/PairwiseDisjoint.v\
  theories/Constr/MapUpdate.v\
  theories/Constr/MapLookupList.v\
  theories/Constr/MapInjectivity.v\
  theories/Constr/CSet.v\
  theories/Constr/CMap.v\
  theories/Constr/MapInverse.v\
  theories/Liveness.v\
  theories/Isa/Val.v\
  theories/Isa/MoreExp.v\
  theories/Isa/Exp.v\
  theories/Isa/BitVector.v\
  theories/Isa/OrderedBitVector.v\
  theories/UnreachableCodeAnalysis.v\
  theories/GVN.v\
  theories/AnalysisBackward.v\
  theories/CompCert/Integers.v\
  theories/CompCert/Coqlib.v\
  theories/DVE.v\
  theories/CopyPropagation.v\
  theories/Analysis.v\
  theories/ShadowingFree.v\
  theories/RenamedApart.v\
  theories/Coherence/AllocationAlgo.v\
  theories/Coherence/AllocationAlgoBound.v\
  theories/Coherence/Allocation.v\
  theories/Coherence/Coherence.v\
  theories/Coherence/DelocationCorrect.v\
  theories/Coherence/Delocation.v\
  theories/Coherence/AllocationValidator.v\
  theories/Coherence/Invariance.v\
  theories/Coherence/DelocationValidator.v\
  theories/Coherence/DelocationAlgo.v\
  theories/Coherence/Restrict.v\
  theories/Coherence/AllocationAlgoCorrect.v\
  theories/ConstantPropagationAnalysis.v\
  theories/ParallelMove.v\
  theories/EAE.v\
  theories/Sawtooth.v\
  theories/UnreachableCodeAnalysisCorrect.v\
  theories/AnalysisForward.v\
  theories/Fresh.v\
  theories/InRel.v\
  theories/LivenessCorrect.v\
  theories/Renest.v\
  theories/DCE.v\
  theories/FiniteFixpointIteration.v\
  theories/RenameApart.v\
  theories/ValueOpts.v\
  theories/TrueLiveness.v\
  theories/RenamedApart_Liveness.v\
  theories/Alpha_RenamedApart.v

ifneq ($(filter-out archclean clean cleanall printenv,$(MAKECMDGOALS)),)
-include $(addsuffix .d,$(VFILES))
else
ifeq ($(MAKECMDGOALS),)
-include $(addsuffix .d,$(VFILES))
endif
endif

.SECONDARY: $(addsuffix .d,$(VFILES))

VO=vo
VOFILES:=$(VFILES:.v=.$(VO))
VOFILES1=$(patsubst theories/%,%,$(filter theories/%,$(VOFILES)))
GLOBFILES:=$(VFILES:.v=.glob)
GFILES:=$(VFILES:.v=.g)
HTMLFILES:=$(VFILES:.v=.html)
GHTMLFILES:=$(VFILES:.v=.g.html)
OBJFILES=$(call vo_to_obj,$(VOFILES))
ALLNATIVEFILES=$(OBJFILES:.o=.cmi) $(OBJFILES:.o=.cmo) $(OBJFILES:.o=.cmx) $(OBJFILES:.o=.cmxs)
NATIVEFILES=$(foreach f, $(ALLNATIVEFILES), $(wildcard $f))
NATIVEFILES1=$(patsubst theories/%,%,$(filter theories/%,$(NATIVEFILES)))
ML4FILES:=src/lvc_plugin.ml4

ifneq ($(filter-out archclean clean cleanall printenv,$(MAKECMDGOALS)),)
-include $(addsuffix .d,$(ML4FILES))
else
ifeq ($(MAKECMDGOALS),)
-include $(addsuffix .d,$(ML4FILES))
endif
endif

.SECONDARY: $(addsuffix .d,$(ML4FILES))

ALLCMOFILES:=$(ML4FILES:.ml4=.cmo)
CMOFILES=$(filter-out $(addsuffix .cmo,$(foreach lib,$(MLLIBFILES:.mllib=_MLLIB_DEPENDENCIES) $(MLPACKFILES:.mlpack=_MLPACK_DEPENDENCIES),$($(lib)))),$(ALLCMOFILES))
CMOFILESINC=$(filter $(wildcard src/*),$(CMOFILES)) 
CMXFILES=$(CMOFILES:.cmo=.cmx)
OFILES=$(CMXFILES:.cmx=.o)
CMIFILES=$(ALLCMOFILES:.cmo=.cmi)
CMIFILESINC=$(filter $(wildcard src/*),$(CMIFILES)) 
CMXSFILES=$(CMXFILES:.cmx=.cmxs)
CMXSFILESINC=$(filter $(wildcard src/*),$(CMXSFILES)) 
ifeq '$(HASNATDYNLINK)' 'true'
HASNATDYNLINK_OR_EMPTY := yes
else
HASNATDYNLINK_OR_EMPTY :=
endif

#######################################
#                                     #
# Definition of the toplevel targets. #
#                                     #
#######################################

all: $(VOFILES) $(CMOFILES) $(if $(HASNATDYNLINK_OR_EMPTY),$(CMXSFILES)) 

quick: $(VOFILES:.vo=.vio)

vio2vo:
	$(COQC) $(COQDEBUG) $(COQFLAGS) -schedule-vio2vo $(J) $(VOFILES:%.vo=%.vio)
checkproofs:
	$(COQC) $(COQDEBUG) $(COQFLAGS) -schedule-vio-checking $(J) $(VOFILES:%.vo=%.vio)
gallina: $(GFILES)

html: $(GLOBFILES) $(VFILES)
	- mkdir -p html
	$(COQDOC) -toc $(COQDOCFLAGS) -html $(COQDOCLIBS) -d html $(VFILES)

gallinahtml: $(GLOBFILES) $(VFILES)
	- mkdir -p html
	$(COQDOC) -toc $(COQDOCFLAGS) -html -g $(COQDOCLIBS) -d html $(VFILES)

all.ps: $(VFILES)
	$(COQDOC) -toc $(COQDOCFLAGS) -ps $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $^`

all-gal.ps: $(VFILES)
	$(COQDOC) -toc $(COQDOCFLAGS) -ps -g $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $^`

all.pdf: $(VFILES)
	$(COQDOC) -toc $(COQDOCFLAGS) -pdf $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $^`

all-gal.pdf: $(VFILES)
	$(COQDOC) -toc $(COQDOCFLAGS) -pdf -g $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $^`

validate: $(VOFILES)
	$(COQCHK) $(COQCHKFLAGS) $(COQCHKLIBS) $(notdir $(^:.vo=))

beautify: $(VFILES:=.beautified)
	for file in $^; do mv $${file%.beautified} $${file%beautified}old && mv $${file} $${file%.beautified}; done
	@echo 'Do not do "make clean" until you are sure that everything went well!'
	@echo 'If there were a problem, execute "for file in $$(find . -name \*.v.old -print); do mv $${file} $${file%.old}; done" in your shell/'

.PHONY: all archclean beautify byte clean cleanall gallina gallinahtml html install install-doc install-natdynlink install-toploop opt printenv quick uninstall userinstall validate vio2vo

####################
#                  #
# Special targets. #
#                  #
####################

byte:
	$(MAKE) all "OPT:=-byte"

opt:
	$(MAKE) all "OPT:=-opt"

userinstall:
	+$(MAKE) USERINSTALL=true install

install-natdynlink:
	install -d "$(DSTROOT)"$(COQLIBINSTALL)/Paco; \
	for i in $(CMXSFILESINC); do \
	 install -m 0755 $$i "$(DSTROOT)"$(COQLIBINSTALL)/Paco/`basename $$i`; \
	done
	install -d "$(DSTROOT)"$(COQLIBINSTALL)/Containers; \
	for i in $(CMXSFILESINC); do \
	 install -m 0755 $$i "$(DSTROOT)"$(COQLIBINSTALL)/Containers/`basename $$i`; \
	done
	install -d "$(DSTROOT)"$(COQLIBINSTALL)/Lvc; \
	for i in $(CMXSFILESINC); do \
	 install -m 0755 $$i "$(DSTROOT)"$(COQLIBINSTALL)/Lvc/`basename $$i`; \
	done

install-toploop: $(MLLIBFILES:.mllib=.cmxs)
	 install -d "$(DSTROOT)"$(COQTOPINSTALL)/
	 install -m 0755 $?  "$(DSTROOT)"$(COQTOPINSTALL)/

install:$(if $(HASNATDYNLINK_OR_EMPTY),install-natdynlink)
	install -d "$(DSTROOT)"$(COQLIBINSTALL)/Paco; \
	for i in $(CMIFILESINC) $(CMOFILESINC); do \
	 install -m 0644 $$i "$(DSTROOT)"$(COQLIBINSTALL)/Paco/`basename $$i`; \
	done
	install -d "$(DSTROOT)"$(COQLIBINSTALL)/Containers; \
	for i in $(CMIFILESINC) $(CMOFILESINC); do \
	 install -m 0644 $$i "$(DSTROOT)"$(COQLIBINSTALL)/Containers/`basename $$i`; \
	done
	cd "theories" && for i in $(NATIVEFILES1) $(GLOBFILES1) $(VFILES1) $(VOFILES1); do \
	 install -d "`dirname "$(DSTROOT)"$(COQLIBINSTALL)/Lvc/$$i`"; \
	 install -m 0644 $$i "$(DSTROOT)"$(COQLIBINSTALL)/Lvc/$$i; \
	done
	for i in $(CMIFILESINC) $(CMOFILESINC); do \
	 install -m 0644 $$i "$(DSTROOT)"$(COQLIBINSTALL)/Lvc/`basename $$i`; \
	done

install-doc:
	install -d "$(DSTROOT)"$(COQDOCINSTALL)/$(INSTALLDEFAULTROOT)/html
	for i in html/*; do \
	 install -m 0644 $$i "$(DSTROOT)"$(COQDOCINSTALL)/$(INSTALLDEFAULTROOT)/$$i;\
	done

uninstall_me.sh: Makefile
	echo '#!/bin/sh' > $@
	printf 'cd "$${DSTROOT}"$(COQLIBINSTALL)/Paco && \\\nfor i in $(CMXSFILESINC); do rm -f "`basename "$$i"`"; done && find . -type d -and -empty -delete\ncd "$${DSTROOT}"$(COQLIBINSTALL) && find "Paco" -maxdepth 0 -and -empty -exec rmdir -p \{\} \;\n' >> "$@"
	printf 'cd "$${DSTROOT}"$(COQLIBINSTALL)/Containers && \\\nfor i in $(CMXSFILESINC); do rm -f "`basename "$$i"`"; done && find . -type d -and -empty -delete\ncd "$${DSTROOT}"$(COQLIBINSTALL) && find "Containers" -maxdepth 0 -and -empty -exec rmdir -p \{\} \;\n' >> "$@"
	printf 'cd "$${DSTROOT}"$(COQLIBINSTALL)/Lvc && \\\nfor i in $(CMXSFILESINC); do rm -f "`basename "$$i"`"; done && find . -type d -and -empty -delete\ncd "$${DSTROOT}"$(COQLIBINSTALL) && find "Lvc" -maxdepth 0 -and -empty -exec rmdir -p \{\} \;\n' >> "$@"
	printf 'cd "$${DSTROOT}"$(COQLIBINSTALL)/Paco && \\\nfor i in $(CMIFILESINC) $(CMOFILESINC); do rm -f "`basename "$$i"`"; done && find . -type d -and -empty -delete\ncd "$${DSTROOT}"$(COQLIBINSTALL) && find "Paco" -maxdepth 0 -and -empty -exec rmdir -p \{\} \;\n' >> "$@"
	printf 'cd "$${DSTROOT}"$(COQLIBINSTALL)/Containers && \\\nfor i in $(CMIFILESINC) $(CMOFILESINC); do rm -f "`basename "$$i"`"; done && find . -type d -and -empty -delete\ncd "$${DSTROOT}"$(COQLIBINSTALL) && find "Containers" -maxdepth 0 -and -empty -exec rmdir -p \{\} \;\n' >> "$@"
	printf 'cd "$${DSTROOT}"$(COQLIBINSTALL)/Lvc && rm -f $(NATIVEFILES1) $(GLOBFILES1) $(VFILES1) $(VOFILES1) && \\\nfor i in $(CMIFILESINC) $(CMOFILESINC); do rm -f "`basename "$$i"`"; done && find . -type d -and -empty -delete\ncd "$${DSTROOT}"$(COQLIBINSTALL) && find "Lvc" -maxdepth 0 -and -empty -exec rmdir -p \{\} \;\n' >> "$@"
	printf 'cd "$${DSTROOT}"$(COQDOCINSTALL)/$(INSTALLDEFAULTROOT) \\\n' >> "$@"
	printf '&& rm -f $(shell find "html" -maxdepth 1 -and -type f -print)\n' >> "$@"
	printf 'cd "$${DSTROOT}"$(COQDOCINSTALL) && find $(INSTALLDEFAULTROOT)/html -maxdepth 0 -and -empty -exec rmdir -p \{\} \;\n' >> "$@"
	chmod +x $@

uninstall: uninstall_me.sh
	sh $<

.merlin:
	@echo 'FLG -rectypes' > .merlin
	@echo "B $(COQLIB) kernel" >> .merlin
	@echo "B $(COQLIB) lib" >> .merlin
	@echo "B $(COQLIB) library" >> .merlin
	@echo "B $(COQLIB) parsing" >> .merlin
	@echo "B $(COQLIB) pretyping" >> .merlin
	@echo "B $(COQLIB) interp" >> .merlin
	@echo "B $(COQLIB) printing" >> .merlin
	@echo "B $(COQLIB) intf" >> .merlin
	@echo "B $(COQLIB) proofs" >> .merlin
	@echo "B $(COQLIB) tactics" >> .merlin
	@echo "B $(COQLIB) tools" >> .merlin
	@echo "B $(COQLIB) toplevel" >> .merlin
	@echo "B $(COQLIB) stm" >> .merlin
	@echo "B $(COQLIB) grammar" >> .merlin
	@echo "B $(COQLIB) config" >> .merlin
	@echo "B /home/sigurd/Studium/lvc/ContainersPlugin/src" >> .merlin
	@echo "S /home/sigurd/Studium/lvc/ContainersPlugin/src" >> .merlin
	@echo "B /home/sigurd/Studium/lvc/src" >> .merlin
	@echo "S /home/sigurd/Studium/lvc/src" >> .merlin

clean::
	rm -f $(ALLCMOFILES) $(CMIFILES) $(CMAFILES)
	rm -f $(ALLCMOFILES:.cmo=.cmx) $(CMXAFILES) $(CMXSFILES) $(ALLCMOFILES:.cmo=.o) $(CMXAFILES:.cmxa=.a)
	rm -f $(addsuffix .d,$(MLFILES) $(MLIFILES) $(ML4FILES) $(MLLIBFILES) $(MLPACKFILES))
	rm -f $(OBJFILES) $(OBJFILES:.o=.native) $(NATIVEFILES)
	find . -name .coq-native -type d -empty -delete
	rm -f $(VOFILES) $(VOFILES:.vo=.vio) $(GFILES) $(VFILES:.v=.v.d) $(VFILES:=.beautified) $(VFILES:=.old)
	rm -f all.ps all-gal.ps all.pdf all-gal.pdf all.glob $(VFILES:.v=.glob) $(VFILES:.v=.tex) $(VFILES:.v=.g.tex) all-mli.tex
	- rm -rf html mlihtml uninstall_me.sh

cleanall:: clean
	rm -f $(patsubst %.v,.%.aux,$(VFILES))

archclean::
	rm -f *.cmx *.o

printenv:
	@"$(COQBIN)coqtop" -config
	@echo 'CAMLC =	$(CAMLC)'
	@echo 'CAMLOPTC =	$(CAMLOPTC)'
	@echo 'PP =	$(PP)'
	@echo 'COQFLAGS =	$(COQFLAGS)'
	@echo 'COQLIBINSTALL =	$(COQLIBINSTALL)'
	@echo 'COQDOCINSTALL =	$(COQDOCINSTALL)'

###################
#                 #
# Implicit rules. #
#                 #
###################

$(ML4FILES:.ml4=.cmo): %.cmo: %.ml4
	$(CAMLC) $(ZDEBUG) $(ZFLAGS) $(PP) -impl $<

$(filter-out $(addsuffix .cmx,$(foreach lib,$(MLPACKFILES:.mlpack=_MLPACK_DEPENDENCIES),$($(lib)))),$(ML4FILES:.ml4=.cmx)): %.cmx: %.ml4
	$(CAMLOPTC) $(ZDEBUG) $(ZFLAGS) $(PP) -impl $<

$(addsuffix .d,$(ML4FILES)): %.ml4.d: %.ml4
	$(OCAMLDEP) -slash $(OCAMLLIBS) $(PP) -impl "$<" > "$@" || ( RV=$$?; rm -f "$@"; exit $${RV} )

$(filter-out $(MLLIBFILES:.mllib=.cmxs),$(MLFILES:.ml=.cmxs) $(ML4FILES:.ml4=.cmxs) $(MLPACKFILES:.mlpack=.cmxs)): %.cmxs: %.cmx
	$(CAMLOPTLINK) $(ZDEBUG) $(ZFLAGS) -shared -o $@ $<

$(MLLIBFILES:.mllib=.cmxs): %.cmxs: %.cmxa
	$(CAMLOPTLINK) $(ZDEBUG) $(ZFLAGS) -linkall -shared -o $@ $<

$(VOFILES): %.vo: %.v
	$(COQC) $(COQDEBUG) $(COQFLAGS) $<

$(GLOBFILES): %.glob: %.v
	$(COQC) $(COQDEBUG) $(COQFLAGS) $<

$(VFILES:.v=.vio): %.vio: %.v
	$(COQC) -quick $(COQDEBUG) $(COQFLAGS) $<

$(GFILES): %.g: %.v
	$(GALLINA) $<

$(VFILES:.v=.tex): %.tex: %.v
	$(COQDOC) $(COQDOCFLAGS) -latex $< -o $@

$(HTMLFILES): %.html: %.v %.glob
	$(COQDOC) $(COQDOCFLAGS) -html $< -o $@

$(VFILES:.v=.g.tex): %.g.tex: %.v
	$(COQDOC) $(COQDOCFLAGS) -latex -g $< -o $@

$(GHTMLFILES): %.g.html: %.v %.glob
	$(COQDOC) $(COQDOCFLAGS)  -html -g $< -o $@

$(addsuffix .d,$(VFILES)): %.v.d: %.v
	$(COQDEP) $(COQLIBS) "$<" > "$@" || ( RV=$$?; rm -f "$@"; exit $${RV} )

$(addsuffix .beautified,$(VFILES)): %.v.beautified:
	$(COQC) $(COQDEBUG) $(COQFLAGS) -beautify $*.v

# WARNING
#
# This Makefile has been automagically generated
# Edit at your own risks !
#
# END OF WARNING

