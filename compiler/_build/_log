### Starting build.
# Target: lvcc.ml.depends, tags: { package(num), extension:ml, file:lvcc.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package num -modules lvcc.ml > lvcc.ml.depends # cached
# Target: big.ml.depends, tags: { package(num), extension:ml, file:big.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package num -modules big.ml > big.ml.depends # cached
# Target: big.cmo, tags: { package(num), byte, compile, extension:cmo, extension:ml, file:big.cmo, file:big.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -package num -o big.cmo big.ml # cached
# Target: lexer.mll, tags: { package(num), extension:mll, file:lexer.mll, lexer, ocaml, ocamllex, quiet }
/usr/bin/ocamllex.opt -q lexer.mll # cached
# Target: lexer.ml.depends, tags: { package(num), extension:ml, file:lexer.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package num -modules lexer.ml > lexer.ml.depends # cached
# Target: names.ml.depends, tags: { package(num), extension:ml, file:names.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package num -modules names.ml > names.ml.depends # cached
# Target: names.cmo, tags: { package(num), byte, compile, extension:cmo, extension:ml, file:names.cmo, file:names.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -package num -o names.cmo names.ml # cached
# Target: parser.mly.depends, tags: { package(num), extension:mly, file:parser.mly, infer, menhir_ocamldep, ocaml, ocamldep, quiet }
menhir --explain --infer -la 1 --raw-depend --ocamldep 'ocamlfind ocamldep -modules' parser.mly > parser.mly.depends
+ menhir --explain --infer -la 1 --raw-depend --ocamldep 'ocamlfind ocamldep -modules' parser.mly > parser.mly.depends
File "parser.mly", line 21, characters 7-19:
Warning: the token IL_semicolon is unused.
# Target: lvc.mli.depends, tags: { package(num), extension:mli, file:lvc.mli, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package num -modules lvc.mli > lvc.mli.depends # cached
# Target: lvc.cmi, tags: { package(num), byte, compile, extension:mli, file:lvc.mli, interf, ocaml, quiet }
ocamlfind ocamlc -c -package num -o lvc.cmi lvc.mli # cached
# Target: parser.mly, tags: { package(num), byte, compile, extension:ml, extension:mly, file:parser.ml, file:parser.mly, infer, menhir, ocaml, parser, quiet }
menhir --explain --infer -la 1 --ocamlc 'ocamlfind ocamlc -package num' --infer parser.mly
+ menhir --explain --infer -la 1 --ocamlc 'ocamlfind ocamlc -package num' --infer parser.mly
File "parser.mly", line 21, characters 7-19:
Warning: the token IL_semicolon is unused.
File "parser.mly", line 44, characters 43-65:
Error: This expression has type int but an expression was expected of type
         Lvc.val0 = Lvc.z
Command exited with code 1.
# Compilation unsuccessful.
